apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "argocd-unifi.fullname" . }}
  labels:
    {{- include "argocd-unifi.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllers.main.replicas | default 1 }}
  selector:
    matchLabels:
      {{- include "argocd-unifi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "argocd-unifi.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.controllers.main.pod }}
      {{- with .Values.controllers.main.pod.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controllers.main.pod.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.defaultPodOptions.securityContext }}
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      {{- end }}      
      initContainers:
        - name: fix-permissions
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              chown -R 1000:1000 /config
              chmod -R 755 /config
              # Create necessary directories
              mkdir -p /config/data /config/logs /config/run
              chown -R 1000:1000 /config/data /config/logs /config/run
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: config
              mountPath: /config
      containers:
        - name: unifi
          image: "{{ .Values.controllers.main.containers.main.image.repository }}:{{ .Values.controllers.main.containers.main.image.tag }}"
          imagePullPolicy: {{ .Values.controllers.main.containers.main.image.pullPolicy }}
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            allowPrivilegeEscalation: true
          env:
            {{- range $key, $value := .Values.controllers.main.containers.main.env }}
            {{- if and (eq $key "MONGO_USER") $.Values.azureKeyVault.enabled }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "argocd-unifi.fullname" $ }}-mongo-username
                  key: username
            {{- else if and (eq $key "MONGO_PASS") $.Values.azureKeyVault.enabled }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "argocd-unifi.fullname" $ }}-mongo-password
                  key: password
            {{- else if and (eq $key "MONGO_DBNAME") $.Values.azureKeyVault.enabled }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "argocd-unifi.fullname" $ }}-mongo-database
                  key: database
            {{- else }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          ports:
            {{- range $name, $port := .Values.service.main.ports }}
            - name: {{ $name }}
              containerPort: {{ $port.port }}
              protocol: {{ $port.protocol | default "TCP" }}
            {{- end }}
          {{- with .Values.controllers.main.containers.main.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- range $name, $config := .Values.persistence }}
            {{- if $config.enabled }}
            {{- range $config.globalMounts }}
            - name: {{ $name }}
              mountPath: {{ .path }}
              readOnly: {{ .readOnly | default false }}
            {{- end }}
            {{- end }}
            {{- end }}
      volumes:
        {{- range $name, $config := .Values.persistence }}
        {{- if $config.enabled }}
        - name: {{ $name }}
          persistentVolumeClaim:
            claimName: {{ include "argocd-unifi.fullname" $ }}-{{ $name }}
        {{- end }}
        {{- end }}