apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "argocd-unifi.fullname" . }}
  labels:
    {{- include "argocd-unifi.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllers.main.replicas | default 1 }}
  selector:
    matchLabels:
      {{- include "argocd-unifi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "argocd-unifi.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      initContainers:
        - name: fix-permissions
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              chown -R 1000:1000 /config
              chmod -R 755 /config
              # Create necessary directories
              mkdir -p /config/data /config/logs /config/run
              chown -R 1000:1000 /config/data /config/logs /config/run
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: config
              mountPath: /config
      containers:
        - name: unifi
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            allowPrivilegeEscalation: true
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "UTC"
            - name: MEM_LIMIT
              value: "1024"
            - name: MEM_STARTUP
              value: "1024"
            - name: MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "argocd-unifi.fullname" . }}-mongo-username
                  key: username
            - name: MONGO_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "argocd-unifi.fullname" . }}-mongo-password
                  key: password
            - name: MONGO_DBNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "argocd-unifi.fullname" . }}-mongo-database
                  key: database
            - name: MONGO_HOST
              value: "{{ include "argocd-unifi.fullname" . }}-mongodb"
            - name: MONGO_PORT
              value: "27017"
            - name: MONGO_AUTHSOURCE
              value: "admin"
          ports:
            {{- range $name, $config := .Values.service.ports }}
            - name: {{ $name }}
              containerPort: {{ $config.port }}
              protocol: {{ $config.protocol }}
            {{- end }}
          {{- with .Values.controllers.main.containers.main.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: false
            - name: data
              mountPath: /usr/lib/unifi/data
              readOnly: false
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: {{ include "argocd-unifi.fullname" . }}-config
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "argocd-unifi.fullname" . }}-data